import React from 'react';
import { StyleSheet, View, Text, SafeAreaView, Image, TouchableOpacity, ScrollView, TextInput } from 'react-native';
import { FontAwesome5, Ionicons } from '@expo/vector-icons';
import { useNavigation, useRouter } from 'expo-router';

// Reusable component for each artist card
const ArtistCard = ({ name, imageSource }) => (
  <View style={styles.artistCard}>
    <Image source={imageSource} style={styles.artistImage} />
    <Text style={styles.artistName}>{name}</Text>
  </View>
);

const ArtistsScreen = () => {
  const navigation = useNavigation();
  const router = useRouter();

  // Sample data for the artist list
  const artists = [
    { id: 1, name: 'James McGill', image: require('../../assets/nat.jpeg') },
    { id: 2, name: 'Mike Ehrmantraut', image: require('../../assets/nat.jpeg') },
    { id: 3, name: 'Gustavo Fring', image: require('../../assets/nat.jpeg') },
    { id: 4, name: 'Frank Stella', image: require('../../assets/nat.jpeg') },
    { id: 5, name: 'Erza Blake', image: require('../../assets/nat.jpeg') },
    { id: 6, name: 'Natsuki Deguchi', image: require('../../assets/nat.jpeg') },
  ];

  return (
    <SafeAreaView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <View style={styles.leftHeader}>
          <TouchableOpacity onPress={() => navigation.openDrawer()}>
            <FontAwesome5 name="bars" size={24} color="black" />
          </TouchableOpacity>
          <Text style={styles.headerTitle}>Artist</Text>
        </View>
        <View style={styles.iconContainer}>
          <TouchableOpacity
            style={styles.iconButton}
            onPress={() => router.push('/messages')}
          >
            <Ionicons name="chatbox-ellipses-outline" size={24} color="black" />
          </TouchableOpacity>
          <TouchableOpacity style={styles.iconButton}>
            <Ionicons name="notifications-outline" size={24} color="black" />
          </TouchableOpacity>
          <TouchableOpacity 
            style={styles.profileButton} 
            onPress={() => router.push("/profile")}   //navigate to profile.js
          >
          <Image
              source={require('../../assets/RonProfile.jpeg')} 
              style={styles.profilePic}
          />
          </TouchableOpacity>
        </View>
      </View>

      {/* Search bar */}
      <View style={styles.searchContainer}>
        <Ionicons name="search" size={22} color="#888" />
        <TextInput placeholder="Search" style={styles.searchInput} />
      </View>

      {/* Artist Grid */}
      <ScrollView style={styles.artistGrid}>
        <View style={styles.row}>
          {artists.map(artist => (
            <ArtistCard key={artist.id} name={artist.name} imageSource={artist.image} />
          ))}
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 15,
    paddingVertical: 10,
    borderBottomWidth: 1,
    borderBottomColor: '#e0e0e0',
    paddingTop: 30,
  },
  leftHeader: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginLeft: 15,
  },
  iconContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  iconButton: {
    marginLeft: 15,
  },
  profileButton: {
    marginLeft: 15,
  },
  profilePic: {
    width: 30,
    height: 30,
    borderRadius: 15,
  },
  searchContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#f2f2f2',
    margin: 10,
    padding: 8,
    borderRadius: 8,
  },
  searchInput: {
    marginLeft: 8,
    flex: 1,
  },
  artistGrid: {
    padding: 10,
  },
  row: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  artistCard: {
    width: '48%',
    alignItems: 'center',
    backgroundColor: 'white',
    borderRadius: 10,
    padding: 10,
    marginBottom: 10,
    shadowColor: '#000',
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 2,
  },
  artistImage: {
    width: 100,
    height: 100,
    borderRadius: 50,
    marginBottom: 10,
  },
  artistName: {
    fontWeight: 'bold',
    textAlign: 'center',
  },
});

export default ArtistsScreen;
